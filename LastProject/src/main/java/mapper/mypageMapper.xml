<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypageMapper">

<!-- 주문내역리스트 -->
<select id="selectPayList" parameterType="hashmap" resultType="hashmap">
 SELECT *
 FROM (select  rownum rm,a .* from (select pay.payid,pay.pid,pay.paycount,pay.payaddr,pay.groupid,pay.paytel,pay.paydate,pay.paycontent,pay.paytype,pay.paytotal,pay.paystate,s.sname,p.pprice,p.pname from pay pay , store s, product p where pay.username=#{id} and pay.pid =p.pid and  s.sid=p.sid  
<if test="vo.start != isNotNull">
 <![CDATA[ and pay.paydate >= to_date(#{vo.start},'YYYY-MM-DD') and pay.paydate<=to_date(#{vo.end},'YYYY-MM-DD-HH24:MI:SS')
]]>
</if>
<!-- vo.payState.equals("배송") or vo.payState.equals("픽업") -->
<if test='vo.payState != null '>
			and pay.paystate = #{vo.payState}
</if>
 order by pay.paydate desc) a ) pay
 where pay.rm between  #{first} and #{end} 

</select>

<!-- 리뷰리스트 -->
<select id="selectReviewList" parameterType="hashmap" resultType="hashmap">
select hello.* from (select rownum rm,r.rid,r.payid,r.rcontent,r.rdate,r.delyn,r.mkid,r.rrating,r.pid,r.username,s.sname from review r , product p, store s where r.pid=p.pid and p.sid=s.sid and r.username=#{id} and r.delyn='N' order by r.rdate desc) hello 
where rm between #{first} and #{end} 
</select>

<!-- 전체페이지 수 -->
<select id="getTotal" parameterType="hashmap" resultType='int'>
select count(*) from ${table} where ${condition1}=#{value1}
<if test="vo.payState != null ">
			and pay.paystate = #{vo.payState}
</if>
<if test="vo.start != null">
 <![CDATA[ and pay.paydate >= to_date(#{vo.start},'YYYY-MM-DD') and pay.paydate<=to_date(#{vo.end},'YYYY-MM-DD-HH24:MI:SS')
]]>
</if>

</select>

<!-- 리뷰삭제 -->
<update id="deleteReview" parameterType="review" >
update review set delyn='Y' where rId=#{rId}
</update>

<!-- 임의의 사용자의 음식 랭킹 3위 -->
<select id="foodRank" parameterType="string" resultType="com.vo.ChartVO">
 <![CDATA[
select  rownum rm,two.* 
from (select pname,count(username) cnt_user 
from (select p.pname pname, pay.username username 
from product p,pay pay where p.pid=pay.pid and pay.username=#{id}) one group by pname order by cnt_user desc) two
where rownum <=3
]]>
</select>

<select id="moneyChart" parameterType="string" resultType="com.vo.ChartVO">
select term,sum(paytotal) sumtotal from (select to_char(paydate,'YYYY/MM') term, paytotal from pay where username=#{id}) one group by one.term order by one.term 
</select>

</mapper>